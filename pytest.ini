[pytest]
asyncio_mode = strict
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test coverage settings
addopts = -v --cov=app --cov-report=term-missing --cov-report=html

# Environment variables for tests
env =
    POSTGRES_USER=postgres
    POSTGRES_PASSWORD=postgres
    POSTGRES_HOST=localhost
    POSTGRES_PORT=5432
    POSTGRES_DB=test_chatbot_db
    TEST_DB_POOL_SIZE=5
    TEST_DB_POOL_MAX_OVERFLOW=10
    TEST_DB_TIMEOUT=30
    TEST_SCHEMA_PREFIX=test_tenant_
    TEST_ISOLATION_LEVEL=repeatable_read

# Custom markers
markers =
    asyncio: mark test as async test
    db: mark test as requiring database access
    tenant: mark test as requiring tenant context

# Logging settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning:pytest_asyncio.*:
    ignore::RuntimeWarning:tortoise.*:
    ignore::DeprecationWarning:tortoise.*: 